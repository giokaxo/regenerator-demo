import ReadyToPayAchMethod from '../models/ready-to-pay-ach-method';
import ReadyToPayGenericMethod from '../models/ready-to-pay-generic-method';
import ReadyToPayKlarnaMethod from '../models/ready-to-pay-klarna-method';
import ReadyToPayPaymentCardMethod from '../models/ready-to-pay-payment-card-method';
import ReadyToPayPayPalMethod from '../models/ready-to-pay-pay-pal-method';
import { ReadyToPayMethods } from '../models/ready-to-pay-methods';

export default class ReadyToPayMethodsFactory {
  static from(data: any = {}): ReadyToPayMethods {
    switch(data.method) {
      case 'ach': return new ReadyToPayAchMethod(data);
      case 'AdvCash': return new ReadyToPayGenericMethod(data);
      case 'Alfa-click': return new ReadyToPayGenericMethod(data);
      case 'Alipay': return new ReadyToPayGenericMethod(data);
      case 'AstroPay Card': return new ReadyToPayGenericMethod(data);
      case 'AstroPay-GO': return new ReadyToPayGenericMethod(data);
      case 'Baloto': return new ReadyToPayGenericMethod(data);
      case 'Bancontact': return new ReadyToPayGenericMethod(data);
      case 'Bancontact-mobile': return new ReadyToPayGenericMethod(data);
      case 'BankReferenced': return new ReadyToPayGenericMethod(data);
      case 'Beeline': return new ReadyToPayGenericMethod(data);
      case 'Belfius-direct-net': return new ReadyToPayGenericMethod(data);
      case 'Bizum': return new ReadyToPayGenericMethod(data);
      case 'Boleto': return new ReadyToPayGenericMethod(data);
      case 'CASHlib': return new ReadyToPayGenericMethod(data);
      case 'CODVoucher': return new ReadyToPayGenericMethod(data);
      case 'CashToCode': return new ReadyToPayGenericMethod(data);
      case 'China UnionPay': return new ReadyToPayGenericMethod(data);
      case 'Cleo': return new ReadyToPayGenericMethod(data);
      case 'Conekta-oxxo': return new ReadyToPayGenericMethod(data);
      case 'Cupon-de-pagos': return new ReadyToPayGenericMethod(data);
      case 'EPS': return new ReadyToPayGenericMethod(data);
      case 'Efecty': return new ReadyToPayGenericMethod(data);
      case 'FasterPay': return new ReadyToPayGenericMethod(data);
      case 'Flexepin': return new ReadyToPayGenericMethod(data);
      case 'Giropay': return new ReadyToPayGenericMethod(data);
      case 'Google Pay': return new ReadyToPayGenericMethod(data);
      case 'Gpaysafe': return new ReadyToPayGenericMethod(data);
      case 'ING-homepay': return new ReadyToPayGenericMethod(data);
      case 'INOVAPAY-pin': return new ReadyToPayGenericMethod(data);
      case 'INOVAPAY-wallet': return new ReadyToPayGenericMethod(data);
      case 'InstaDebit': return new ReadyToPayGenericMethod(data);
      case 'InstantPayments': return new ReadyToPayGenericMethod(data);
      case 'Interac': return new ReadyToPayGenericMethod(data);
      case 'Interac-eTransfer': return new ReadyToPayGenericMethod(data);
      case 'Interac-online': return new ReadyToPayGenericMethod(data);
      case 'Jeton': return new ReadyToPayGenericMethod(data);
      case 'KNOT': return new ReadyToPayGenericMethod(data);
      case 'Khelocard': return new ReadyToPayGenericMethod(data);
      case 'MTS': return new ReadyToPayGenericMethod(data);
      case 'Matrix': return new ReadyToPayGenericMethod(data);
      case 'MaxiCash': return new ReadyToPayGenericMethod(data);
      case 'Megafon': return new ReadyToPayGenericMethod(data);
      case 'MiFinity-eWallet': return new ReadyToPayGenericMethod(data);
      case 'MuchBetter': return new ReadyToPayGenericMethod(data);
      case 'Multibanco': return new ReadyToPayGenericMethod(data);
      case 'Neosurf': return new ReadyToPayGenericMethod(data);
      case 'Netbanking': return new ReadyToPayGenericMethod(data);
      case 'Neteller': return new ReadyToPayGenericMethod(data);
      case 'Nordea-Solo': return new ReadyToPayGenericMethod(data);
      case 'OXXO': return new ReadyToPayGenericMethod(data);
      case 'OchaPay': return new ReadyToPayGenericMethod(data);
      case 'Onlineueberweisen': return new ReadyToPayGenericMethod(data);
      case 'P24': return new ReadyToPayGenericMethod(data);
      case 'POLi': return new ReadyToPayGenericMethod(data);
      case 'Pagadito': return new ReadyToPayGenericMethod(data);
      case 'PagoEffectivo': return new ReadyToPayGenericMethod(data);
      case 'Pagsmile-deposit-express': return new ReadyToPayGenericMethod(data);
      case 'Pagsmile-lottery': return new ReadyToPayGenericMethod(data);
      case 'Pay4Fun': return new ReadyToPayGenericMethod(data);
      case 'PayCash': return new ReadyToPayGenericMethod(data);
      case 'PayTabs': return new ReadyToPayGenericMethod(data);
      case 'Payeer': return new ReadyToPayGenericMethod(data);
      case 'PaymentAsia-crypto': return new ReadyToPayGenericMethod(data);
      case 'Paymero': return new ReadyToPayGenericMethod(data);
      case 'Paynote': return new ReadyToPayGenericMethod(data);
      case 'Paysafecard': return new ReadyToPayGenericMethod(data);
      case 'Paysafecash': return new ReadyToPayGenericMethod(data);
      case 'Perfect-money': return new ReadyToPayGenericMethod(data);
      case 'PhonePe': return new ReadyToPayGenericMethod(data);
      case 'Piastrix': return new ReadyToPayGenericMethod(data);
      case 'PinPay': return new ReadyToPayGenericMethod(data);
      case 'PostFinance-card': return new ReadyToPayGenericMethod(data);
      case 'PostFinance-e-finance': return new ReadyToPayGenericMethod(data);
      case 'QIWI': return new ReadyToPayGenericMethod(data);
      case 'QPay': return new ReadyToPayGenericMethod(data);
      case 'QQPay': return new ReadyToPayGenericMethod(data);
      case 'Resurs': return new ReadyToPayGenericMethod(data);
      case 'SEPA': return new ReadyToPayGenericMethod(data);
      case 'SMSVoucher': return new ReadyToPayGenericMethod(data);
      case 'SafetyPay': return new ReadyToPayGenericMethod(data);
      case 'Skrill': return new ReadyToPayGenericMethod(data);
      case 'Skrill Rapid Transfer': return new ReadyToPayGenericMethod(data);
      case 'Sofort': return new ReadyToPayGenericMethod(data);
      case 'SparkPay': return new ReadyToPayGenericMethod(data);
      case 'Tele2': return new ReadyToPayGenericMethod(data);
      case 'Terminaly-RF': return new ReadyToPayGenericMethod(data);
      case 'ToditoCash-card': return new ReadyToPayGenericMethod(data);
      case 'Trustly': return new ReadyToPayGenericMethod(data);
      case 'UPI': return new ReadyToPayGenericMethod(data);
      case 'UPayCard': return new ReadyToPayGenericMethod(data);
      case 'USD-coin': return new ReadyToPayGenericMethod(data);
      case 'VCreditos': return new ReadyToPayGenericMethod(data);
      case 'VenusPoint': return new ReadyToPayGenericMethod(data);
      case 'WeChat Pay': return new ReadyToPayGenericMethod(data);
      case 'Webmoney': return new ReadyToPayGenericMethod(data);
      case 'Webpay': return new ReadyToPayGenericMethod(data);
      case 'Webpay Card': return new ReadyToPayGenericMethod(data);
      case 'Webpay-2': return new ReadyToPayGenericMethod(data);
      case 'XPay-P2P': return new ReadyToPayGenericMethod(data);
      case 'XPay-QR': return new ReadyToPayGenericMethod(data);
      case 'Yandex-money': return new ReadyToPayGenericMethod(data);
      case 'Zimpler': return new ReadyToPayGenericMethod(data);
      case 'Zotapay': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-2': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-3': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-4': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-5': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-6': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-7': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-8': return new ReadyToPayGenericMethod(data);
      case 'bank-transfer-9': return new ReadyToPayGenericMethod(data);
      case 'bitcoin': return new ReadyToPayGenericMethod(data);
      case 'cash': return new ReadyToPayGenericMethod(data);
      case 'cash-deposit': return new ReadyToPayGenericMethod(data);
      case 'check': return new ReadyToPayGenericMethod(data);
      case 'cryptocurrency': return new ReadyToPayGenericMethod(data);
      case 'domestic-cards': return new ReadyToPayGenericMethod(data);
      case 'ePay.bg': return new ReadyToPayGenericMethod(data);
      case 'eZeeWallet': return new ReadyToPayGenericMethod(data);
      case 'echeck': return new ReadyToPayGenericMethod(data);
      case 'ecoPayz': return new ReadyToPayGenericMethod(data);
      case 'ecoVoucher': return new ReadyToPayGenericMethod(data);
      case 'iDEAL': return new ReadyToPayGenericMethod(data);
      case 'iDebit': return new ReadyToPayGenericMethod(data);
      case 'iWallet': return new ReadyToPayGenericMethod(data);
      case 'instant-bank-transfer': return new ReadyToPayGenericMethod(data);
      case 'invoice': return new ReadyToPayGenericMethod(data);
      case 'jpay': return new ReadyToPayGenericMethod(data);
      case 'loonie': return new ReadyToPayGenericMethod(data);
      case 'miscellaneous': return new ReadyToPayGenericMethod(data);
      case 'online-bank-transfer': return new ReadyToPayGenericMethod(data);
      case 'oriental-wallet': return new ReadyToPayGenericMethod(data);
      case 'phone': return new ReadyToPayGenericMethod(data);
      case 'plaid-account': return new ReadyToPayGenericMethod(data);
      case 'rapyd-checkout': return new ReadyToPayGenericMethod(data);
      case 'swift-dbt': return new ReadyToPayGenericMethod(data);
      case 'voucher': return new ReadyToPayGenericMethod(data);
      case 'voucher-2': return new ReadyToPayGenericMethod(data);
      case 'voucher-3': return new ReadyToPayGenericMethod(data);
      case 'voucher-4': return new ReadyToPayGenericMethod(data);
      case 'Klarna': return new ReadyToPayKlarnaMethod(data);
      case 'payment-card': return new ReadyToPayPaymentCardMethod(data);
      case 'paypal': return new ReadyToPayPayPalMethod(data);
      default: {
        const error = new Error('Unknown discriminator value');
        error.name = 'UnknownDiscriminatorValue';
        throw error;
      }
    };
  }
}
